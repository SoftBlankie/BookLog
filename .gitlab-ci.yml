image: docker

services:
  - docker:dind

stages:
  - build
  - test
  - docker-build
  - deploy

build:
  stage: build
  image: node
  tags:
    - ci
  script:
    - echo "Start building App"
    - npm install --prefix ./client
      #- npm install --prefix ./server
    - CI=false npm run build --prefix ./client
    - echo "Build successfully!"
  artifacts:
    expire_in: 1 week
    paths:
      - ./client/build
      - ./client/node_modules/
        #- ./server/node_modules/

test:
  stage: test
  image: node
  tags:
    - ci
  script:
    - echo "Testing React App"
    - CI=true npm test --prefix ./client
      #- echo "Testing NodeJS App"
      #- CI=true npm test --prefix ./server
    - echo "Test successfully!"

docker-build:
  stage: docker-build
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - echo "Building Docker React"
    - docker build --pull -t $CI_REGISTRY_IMAGE_REACT ./client
    - docker push $CI_REGISTRY_IMAGE_REACT
    - echo "Registry image:" $CI_REGISTRY_IMAGE_REACT
    - echo "Building Docker Node"
    - docker build --pull -t $CI_REGISTRY_IMAGE_NODE ./server
    - docker push $CI_REGISTRY_IMAGE_NODE
    - echo "Registry image:" $CI_REGISTRY_IMAGE_NODE

deploy:
  stage: deploy
  only:
    - main
  script:
    - apk add --no-cache docker-compose
    - docker-compose up -d
  environment: production
  when: manual
